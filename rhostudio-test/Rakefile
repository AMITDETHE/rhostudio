require 'pathname'
require 'yaml'
require 'fileutils'

require './common/common'
require './common/jake'
require './common/pinfo'

chdir File.dirname(__FILE__)

load File.join(pwd, 'ui/rakefile')
load File.join(pwd, 'unit-tests/rakefile')

$rhostudioTemplate = ""

namespace "autotest" do

  def waitProcess(processName)
    while true do
      pinfo = ProcessInfo.queryProcess(processName.to_s)    
      
      if pinfo.nil? || pinfo.size == 0
        puts 'cancel waiting'
        break
      end
    
      puts 'wait 5 sec'
      sleep 5
    end
  end

  task :config do
    puts 'start config'

    $ymlFile             = 'config.yml'
    $silentInstallerFlag = "/S"

    $config = Jake.config(File.open($ymlFile))
  end

  namespace "install" do

    task :rhostudio do
      startPathTo = $config["paths"]["shared"]
      tempPath    = $config["paths"]["temp-folder"]
      rmsTemplate = "RMS_*.exe"
      pathTo      = getPathByTemplate(startPathTo, rmsTemplate)

      FileUtils.rm_rf tempPath
      FileUtils.mkdir tempPath
      FileUtils.cp pathTo, tempPath

      pathTo = getPathByTemplate(tempPath, rmsTemplate)

      if !pathTo.nil? && File.exist?(pathTo)
        runCommand  = pathTo.to_s
        runCommand += " "
        runCommand += $silentInstallerFlag.to_s

        Jake.run(runCommand)
      else 
        puts 'RMS not found'
      end
    end

  end

  namespace "uninstall" do

    def runUnistall(pathToDir)
      uninstallNameTemplate = "unins*.exe"
      unItems               = getPathByTemplate(pathToDir, uninstallNameTemplate)

      runCommand  = unItems.to_s
      runCommand += " "
      runCommand += $silentInstallerFlag.to_s

      Jake.run(runCommand)

      waitProcess('Au_')
    end

    task :git do
      pathToUn = $config["paths"]["git"]

      if !pathToUn.nil? && File.exist?(pathToUn)
        runUnistall pathToUn
      end
    end

    task :nodejs do
      runCommand  = "C:/Windows/SysWOW64/msiexec.exe"
      runCommand += " "
      runCommand += "/qn"
      runCommand += " "
      runCommand += "/x"
      runCommand += " "
      runCommand += "{F2ED4FEE-55B6-4B16-B8F2-B7F9CF06354C}"

      Jake.run(runCommand)
    end

    task :rhostudio => ["autotest:uninstall:git", "autotest:uninstall:nodejs"] do
      pathToUn = getRhostudioSuitePath

      if !pathToUn.nil? && File.exist?(pathToUn)
        runUnistall pathToUn
      else 
        puts 'uninstall not found'
      end     
    end

  end

  task :shutdown do
    Jake.run("shutdown /s /f /t 5")
  end

  task :install => ["autotest:config", "autotest:uninstall:rhostudio", "autotest:install:rhostudio"] do
  end

  task :run_once => ["autotest:config", "autotest:ui:run_once"] do
  end

  task :run => ["autotest:config", "autotest:ui:run"] do
  end

end